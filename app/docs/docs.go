// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app/test": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "summary": "app test 接口",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "获取登录用户",
                "parameters": [
                    {
                        "description": "获取登录用户",
                        "name": "GetUserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.GetUserInfoReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "请求ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserInfoResp"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "手机\\邮箱验证码登录",
                "parameters": [
                    {
                        "description": "用户登录",
                        "name": "LoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserLoginReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "请求ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功",
                        "schema": {
                            "$ref": "#/definitions/user.UserLoginResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user.GetUserInfoReq": {
            "type": "object"
        },
        "user.GetUserInfoResp": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "头像",
                    "type": "string"
                },
                "birthday": {
                    "description": "生日年-月-日",
                    "type": "string"
                },
                "introduction": {
                    "description": "个人简介",
                    "type": "string"
                },
                "nick_name": {
                    "description": "昵称",
                    "type": "string"
                },
                "sex": {
                    "description": "性别 male:男;female:女; unknown:未知 保密",
                    "type": "string"
                },
                "user_sys_id": {
                    "description": "uid 用户id",
                    "type": "string"
                }
            }
        },
        "user.UserLoginReq": {
            "type": "object",
            "required": [
                "account",
                "area_code"
            ],
            "properties": {
                "account": {
                    "description": "登录账号",
                    "type": "string"
                },
                "area_code": {
                    "description": "区号,如果是手机号 传 区号，如果是邮箱 传 邮箱服务商 gmail、qq、outlook 等",
                    "type": "string"
                },
                "password": {
                    "description": "登录密码，前端 必须进行 sha256 hash 后传过来 【小写】",
                    "type": "string"
                }
            }
        },
        "user.UserLoginResp": {
            "type": "object",
            "properties": {
                "is_new": {
                    "description": "是否是新用户",
                    "type": "boolean"
                },
                "token": {
                    "description": "用户登录成功的 token",
                    "type": "string"
                },
                "user_sys_id": {
                    "description": "uid 用户id",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
